{"version":3,"file":"static/js/186.a4605c66.chunk.js","mappings":"gNAKA,SAASA,IACP,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,SAAUC,GACTA,EAASC,KAAKC,QAAQ,IAAIN,GAAY,GAC3CF,EAAWM,EAASC,KAAKC,QAC1B,IACAC,OAAM,WACLC,IAAAA,OAAAA,QAAwB,0CACxBR,GAAY,EACb,GACJ,GAAE,CAACN,KAEF,gCACGG,EAAQ,KACP,wBACGA,EAAQY,KAAI,SAAAC,GACX,OACE,2BACE,qCAAaA,EAAKC,WAClB,uBAAID,EAAKE,YAFFF,EAAKG,GAKjB,MAGJd,IAAY,gDAGlB,CAED,WAAee,EAAAA,EAAAA,MAAKrB,E,oKCtCdsB,EAAM,8BACNC,EAAM,mCAEL,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAA8CC,GACtD,CAEM,SAASG,EAAgBC,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAA2BK,EAA3B,oBAA+CJ,GACvD,CAEM,SAASK,EAAgBD,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAA2BK,EAA3B,4BAAuDJ,GAC/D,CAEM,SAASd,EAAgBkB,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAA2BK,EAA3B,4BAAuDJ,GAC/D,CAEM,SAASM,EAASC,GACvB,OAAOL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gCAAwCQ,EAAxC,oBAAyDP,GACjE,C","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import React, { memo, useEffect, useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [notFound, setNotFound] = useState(false);\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(function (response) {\n        if (!response.data.results[0]) setNotFound(true);\n        setReviews(response.data.results);\n      })\n      .catch(function () {\n        Notiflix.Notify.failure('Happened ERROR, TRY AGAIN IN SOME TIME');\n        setNotFound(true);\n      });\n  }, [movieId]);\n  return (\n    <>\n      {reviews[0] && (\n        <ul>\n          {reviews.map(elem => {\n            return (\n              <li key={elem.id}>\n                <h3>Author: {elem.author}</h3>\n                <p>{elem.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {notFound && <p>Reviews not found!</p>}\n    </>\n  );\n}\n\nexport default memo(Reviews);\n","import axios from 'axios';\n\nconst API = 'https://api.themoviedb.org/';\nconst KEY = 'c83afea588f6df33499ccee027813248';\n\nexport function getTrending() {\n  return axios.get(`${API}3/trending/all/day?api_key=${KEY}`);\n}\n\nexport function getMovieDetails(movie_id) {\n  return axios.get(`${API}3/movie/${movie_id}?api_key=${KEY}`);\n}\n\nexport function getMovieCredits(movie_id) {\n  return axios.get(`${API}3/movie/${movie_id}/credits?api_key=${KEY}`);\n}\n\nexport function getMovieReviews(movie_id) {\n  return axios.get(`${API}3/movie/${movie_id}/reviews?api_key=${KEY}`);\n}\n\nexport function getMovie(query) {\n  return axios.get(`${API}3/search/movie?query=${query}&api_key=${KEY}`);\n}\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","notFound","setNotFound","useEffect","getMovieReviews","then","response","data","results","catch","Notiflix","map","elem","author","content","id","memo","API","KEY","getTrending","axios","getMovieDetails","movie_id","getMovieCredits","getMovie","query"],"sourceRoot":""}