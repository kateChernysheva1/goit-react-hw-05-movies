{"version":3,"file":"static/js/232.ce25b655.chunk.js","mappings":"4JAGA,SAASA,EAAT,GAA0B,IAATC,EAAQ,EAARA,KACf,OAAO,wBAAKA,GACb,CAMD,KAAeC,EAAAA,EAAAA,MAAKF,E,6KCRPG,EAAOC,EAAAA,EAAAA,IAAH,qGAOJC,GAAOD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,4LAUJG,EAAWH,EAAAA,EAAAA,EAAH,6G,SCZrB,SAASI,IAAgB,IAAD,MACdC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsBF,EAAAA,EAAAA,WAAS,GAA/B,eAAOG,EAAP,KAAYC,EAAZ,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,KAoBpD,OAhBAC,EAAAA,EAAAA,YAAU,WAaR,OAZAC,EAAAA,EAAAA,IAAgBhB,GACbiB,MAAK,SAAUC,GACdd,EAASc,EAASC,KACnB,IACAC,OAAM,WACLC,IAAAA,OAAAA,QAAwB,0CACxBf,GAAO,EACR,IACAgB,SAAQ,WACPd,GAAW,EACZ,IAEI,WAAQ,CAChB,GAAE,CAACR,KAGF,iCACE,SAACJ,EAAD,CAAM2B,GAAIZ,EAAaa,QAAvB,qBAE+B,IAA9BC,OAAOC,KAAKvB,GAAOwB,SAClB,4BACE,UAACjC,EAAD,YACE,gBACEkC,MAAO,CAAEC,MAAO,KAChBC,IACE3B,EAAM4B,aAAe5B,EAAM6B,cAA3B,yCAEM7B,EAAM4B,aAAe5B,EAAM6B,eA9B7C,2HAkCUC,IAAG,UAAE9B,EAAM+B,aAAR,QAAiB/B,EAAMgC,QAE5B,4BACE,SAAC5C,EAAA,EAAD,CAAOC,KAAI,UAAEW,EAAM+B,aAAR,QAAiB/B,EAAMgC,OAEjChC,EAAMiC,aAAe,IACpB,wCAAgBC,KAAKC,MAAMnC,EAAMiC,cAAjC,OAGDjC,EAAMoC,WACL,iCACE,sCACA,uBAAIpC,EAAMoC,cAIbpC,EAAMqC,OAAO,KACZ,iCACE,oCACA,uBACGrC,EAAMqC,OAAOC,KAAI,SAAAC,GAChB,OAAO,4BAAmBA,EAAGP,KAAtB,MAAWO,EAAGC,GACtB,gBAOX,mDAEA,2BACE,yBACE,SAAC,KAAD,CAASpB,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,2BAIJ,SAAC,EAAAqB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,SAKLvC,IAAW,SAACuC,EAAA,EAAD,IACXzC,IAAO,SAACP,EAAD,sCAGb,CAED,OAAeL,EAAAA,EAAAA,MAAKM,E,oKCpGdgD,EAAM,8BACNC,EAAM,mCAEL,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAA8CC,GACtD,CAEM,SAAShC,EAAgBmC,GAC9B,OAAOD,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAA2BI,EAA3B,oBAA+CH,GACvD,CAEM,SAASI,EAAgBD,GAC9B,OAAOD,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAA2BI,EAA3B,4BAAuDH,GAC/D,CAEM,SAASK,EAAgBF,GAC9B,OAAOD,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAA2BI,EAA3B,4BAAuDH,GAC/D,CAEM,SAASM,EAASC,GACvB,OAAOL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gCAAwCQ,EAAxC,oBAAyDP,GACjE,C","sources":["components/Title/Title.jsx","pages/styles/MovieDetails.styled.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Title({ text }) {\n  return <h1>{text}</h1>;\n}\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default memo(Title);\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Card = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  margin-top: 16px;\n`;\n\nexport const Back = styled(Link)`\n  color: #0c0c36;\n  text-decoration: none;\n  font-weight: 600;\n  border: 1px solid blue;\n  border-radius: 15px;\n  padding: 8px 16px;\n  display: inline-flex;\n`;\n\nexport const ErrorMsg = styled.p`\n  text-align: center;\n  margin-top: 40px;\n  font-size: 24px;\n  font-weight: 600;\n`;\n","import Loading from 'components/Loading/Loading';\nimport Title from 'components/Title/Title';\nimport Notiflix from 'notiflix';\nimport { Suspense, memo, useEffect, useRef, useState } from 'react';\nimport { NavLink, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { Back, Card, ErrorMsg } from './styles/MovieDetails.styled';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [err, setErr] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const location = useLocation();\n  const backLocation = useRef(location.state?.from || '/');\n  const standartImage =\n    'https://kartinki.pibig.info/uploads/posts/2023-04/1681549765_kartinki-pibig-info-p-zaglushka-kartinka-arti-krasivo-1.jpg';\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(function (response) {\n        setMovie(response.data);\n      })\n      .catch(function () {\n        Notiflix.Notify.failure('Happened ERROR, TRY AGAIN IN SOME TIME');\n        setErr(true);\n      })\n      .finally(function () {\n        setLoading(false);\n      });\n\n    return () => {};\n  }, [movieId]);\n\n  return (\n    <>\n      <Back to={backLocation.current}>Go back</Back>\n\n      {Object.keys(movie).length !== 0 && (\n        <div>\n          <Card>\n            <img\n              style={{ width: 200 }}\n              src={\n                movie.poster_path || movie.backdrop_path\n                  ? `https://image.tmdb.org/t/p/w200${\n                      movie.poster_path || movie.backdrop_path\n                    }`\n                  : standartImage\n              }\n              alt={movie.title ?? movie.name}\n            />\n            <div>\n              <Title text={movie.title ?? movie.name}></Title>\n\n              {movie.vote_average > 0 && (\n                <p>User Score: {Math.round(movie.vote_average)}%</p>\n              )}\n\n              {movie.overview && (\n                <>\n                  <h2>Overview</h2>\n                  <p>{movie.overview}</p>\n                </>\n              )}\n\n              {movie.genres[0] && (\n                <>\n                  <h3>Genres</h3>\n                  <p>\n                    {movie.genres.map(el => {\n                      return <span key={el.id}>{el.name} </span>;\n                    })}\n                  </p>\n                </>\n              )}\n            </div>\n          </Card>\n\n          <p>Additional information</p>\n\n          <ul>\n            <li>\n              <NavLink to=\"cast\">Cast</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\">Reviews</NavLink>\n            </li>\n          </ul>\n\n          <Suspense fallback={<Loading />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n\n      {loading && <Loading />}\n      {err && <ErrorMsg>ERROR, PAGE NOT FOUND</ErrorMsg>}\n    </>\n  );\n}\n\nexport default memo(MovieDetails);\n","import axios from 'axios';\n\nconst API = 'https://api.themoviedb.org/';\nconst KEY = 'c83afea588f6df33499ccee027813248';\n\nexport function getTrending() {\n  return axios.get(`${API}3/trending/all/day?api_key=${KEY}`);\n}\n\nexport function getMovieDetails(movie_id) {\n  return axios.get(`${API}3/movie/${movie_id}?api_key=${KEY}`);\n}\n\nexport function getMovieCredits(movie_id) {\n  return axios.get(`${API}3/movie/${movie_id}/credits?api_key=${KEY}`);\n}\n\nexport function getMovieReviews(movie_id) {\n  return axios.get(`${API}3/movie/${movie_id}/reviews?api_key=${KEY}`);\n}\n\nexport function getMovie(query) {\n  return axios.get(`${API}3/search/movie?query=${query}&api_key=${KEY}`);\n}\n"],"names":["Title","text","memo","Card","styled","Back","Link","ErrorMsg","MovieDetails","movieId","useParams","useState","movie","setMovie","err","setErr","loading","setLoading","location","useLocation","backLocation","useRef","state","from","useEffect","getMovieDetails","then","response","data","catch","Notiflix","finally","to","current","Object","keys","length","style","width","src","poster_path","backdrop_path","alt","title","name","vote_average","Math","round","overview","genres","map","el","id","Suspense","fallback","Loading","API","KEY","getTrending","axios","movie_id","getMovieCredits","getMovieReviews","getMovie","query"],"sourceRoot":""}