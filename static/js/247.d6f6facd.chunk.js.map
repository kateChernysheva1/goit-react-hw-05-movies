{"version":3,"file":"static/js/247.d6f6facd.chunk.js","mappings":"gNAKA,SAASA,IACP,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAgBA,OAZAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,SAAUC,GACTA,EAASC,KAAKR,KAAK,IAAIG,GAAY,GACxCF,EAAQM,EAASC,KAAKR,KACvB,IACAS,OAAM,WACLC,IAAAA,OAAAA,QAAwB,0CACxBP,GAAY,EACb,GACJ,GAAE,CAACN,KAGF,gCACGG,EAAK,KACJ,wBACGA,EAAKW,KAAI,SAAAC,GACR,OACE,2BACE,gBACEC,MAAO,CAAEC,MAAO,KAChBC,IACEH,EAAKI,aAAL,yCACsCJ,EAAKI,cAzB3D,2HA4BcC,IAAKL,EAAKM,QAEZ,uBAAIN,EAAKM,QACT,uBAAIN,EAAKO,cAXFP,EAAKQ,GAcjB,MAGJlB,IAAY,6CAGlB,CAED,WAAemB,EAAAA,EAAAA,MAAKzB,E,oKClDd0B,EAAM,8BACNC,EAAM,mCAEL,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sCAA8CC,GACtD,CAEM,SAASG,EAAgBC,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAA2BK,EAA3B,oBAA+CJ,GACvD,CAEM,SAASlB,EAAgBsB,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAA2BK,EAA3B,4BAAuDJ,GAC/D,CAEM,SAASK,EAAgBD,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAA2BK,EAA3B,4BAAuDJ,GAC/D,CAEM,SAASM,EAASC,GACvB,OAAOL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gCAAwCQ,EAAxC,oBAAyDP,GACjE,C","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport React, { memo, useEffect, useState } from 'react';\nimport { getMovieCredits } from 'services/api';\nimport { useParams } from 'react-router-dom';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [notFound, setNotFound] = useState(false);\n  const standartImage =\n    'https://kartinki.pibig.info/uploads/posts/2023-04/1681549765_kartinki-pibig-info-p-zaglushka-kartinka-arti-krasivo-1.jpg';\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(function (response) {\n        if (!response.data.cast[0]) setNotFound(true);\n        setCast(response.data.cast);\n      })\n      .catch(function () {\n        Notiflix.Notify.failure('Happened ERROR, TRY AGAIN IN SOME TIME');\n        setNotFound(true);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {cast[0] && (\n        <ul>\n          {cast.map(elem => {\n            return (\n              <li key={elem.id}>\n                <img\n                  style={{ width: 200 }}\n                  src={\n                    elem.profile_path\n                      ? `https://image.tmdb.org/t/p/w200${elem.profile_path}`\n                      : standartImage\n                  }\n                  alt={elem.name}\n                />\n                <p>{elem.name}</p>\n                <p>{elem.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {notFound && <p>Cast not found!</p>}\n    </>\n  );\n}\n\nexport default memo(Cast);\n","import axios from 'axios';\n\nconst API = 'https://api.themoviedb.org/';\nconst KEY = 'c83afea588f6df33499ccee027813248';\n\nexport function getTrending() {\n  return axios.get(`${API}3/trending/all/day?api_key=${KEY}`);\n}\n\nexport function getMovieDetails(movie_id) {\n  return axios.get(`${API}3/movie/${movie_id}?api_key=${KEY}`);\n}\n\nexport function getMovieCredits(movie_id) {\n  return axios.get(`${API}3/movie/${movie_id}/credits?api_key=${KEY}`);\n}\n\nexport function getMovieReviews(movie_id) {\n  return axios.get(`${API}3/movie/${movie_id}/reviews?api_key=${KEY}`);\n}\n\nexport function getMovie(query) {\n  return axios.get(`${API}3/search/movie?query=${query}&api_key=${KEY}`);\n}\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","notFound","setNotFound","useEffect","getMovieCredits","then","response","data","catch","Notiflix","map","elem","style","width","src","profile_path","alt","name","character","id","memo","API","KEY","getTrending","axios","getMovieDetails","movie_id","getMovieReviews","getMovie","query"],"sourceRoot":""}