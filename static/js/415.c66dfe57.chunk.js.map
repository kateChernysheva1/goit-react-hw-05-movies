{"version":3,"file":"static/js/415.c66dfe57.chunk.js","mappings":"sMAEaA,E,OAAOC,EAAAA,GAAH,8O,SCEV,SAASC,EAAT,GAA+B,IAAVC,EAAS,EAATA,MACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACL,EAAD,UACGG,EAAMG,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACvB,OACE,yBACE,SAAC,KAAD,CACEC,GAA0B,MAAtBN,EAASO,SAAT,iBAAsCH,GAAtC,UAAgDA,GACpDI,MAAO,CAAEC,KAAMT,GAFjB,gBAIGG,QAJH,IAIGA,EAAAA,EAASE,KALLD,EASZ,KAGN,C,4CCpBD,SAASM,EAAT,GAA0B,IAATC,EAAQ,EAARA,KACf,OAAO,wBAAKA,GACb,CAMD,KAAeC,EAAAA,EAAAA,MAAKF,E,gHCHpB,SAASG,IACP,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOf,EAAP,KAAcgB,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAUC,GACdN,EAASM,EAASC,KAAKC,QACxB,IACAC,OAAM,SAAUC,GACfC,IAAAA,OAAAA,QAAwBD,EAAME,QAC/B,IACAC,SAAQ,WACPX,GAAW,EACZ,GACJ,GAAE,KAGD,4BACE,SAAC,IAAD,CAAON,KAAK,oBACZ,SAAC,IAAD,CAAWZ,MAAOA,IACjBiB,IAAW,SAAC,IAAD,MAGjB,CAED,WAAeJ,EAAAA,EAAAA,MAAKC,E,oKChCdgB,EAAM,8BACNC,EAAM,mCAEL,SAASX,IACd,OAAOY,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sCAA8CC,GACtD,CAEM,SAASE,EAAgBC,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaF,EAAb,mBAA2BI,EAA3B,oBAA+CH,GACvD,CAEM,SAASI,EAAgBD,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaF,EAAb,mBAA2BI,EAA3B,4BAAuDH,GAC/D,CAEM,SAASK,EAAgBF,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaF,EAAb,mBAA2BI,EAA3B,4BAAuDH,GAC/D,CAEM,SAASM,EAASC,GACvB,OAAON,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gCAAwCQ,EAAxC,oBAAyDP,GACjE,C","sources":["components/ListFilms/ListFilms.styled.jsx","components/ListFilms/ListFilms.jsx","components/Title/Title.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n\n  a {\n    text-decoration: none;\n    color: #da6e80;\n    font-size: 18px;\n    line-height: 1.5;\n    font-weight: 500;\n\n    &:hover {\n      color: #0b7ee4;\n    }\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List } from './ListFilms.styled';\nimport PropTypes from 'prop-types';\n\nexport function ListFilms({ films }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(({ title, id, name }) => {\n        return (\n          <li key={id}>\n            <Link\n              to={location.pathname === '/' ? `movies/${id}` : `${id}`}\n              state={{ from: location }}\n            >\n              {title ?? name}\n            </Link>\n          </li>\n        );\n      })}\n    </List>\n  );\n}\n\nListFilms.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Title({ text }) {\n  return <h1>{text}</h1>;\n}\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default memo(Title);\n","import React, { memo } from 'react';\nimport Title from 'components/Title/Title';\nimport Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport { getTrending } from '../services/api';\nimport { ListFilms } from 'components/ListFilms/ListFilms';\nimport Loading from 'components/Loading/Loading';\n\nfunction Home() {\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getTrending()\n      .then(function (response) {\n        setFilms(response.data.results);\n      })\n      .catch(function (error) {\n        Notiflix.Notify.failure(error.message);\n      })\n      .finally(function () {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <div>\n      <Title text=\"Trending today\" />\n      <ListFilms films={films} />\n      {loading && <Loading />}\n    </div>\n  );\n}\n\nexport default memo(Home);\n","import axios from 'axios';\n\nconst API = 'https://api.themoviedb.org/';\nconst KEY = 'c83afea588f6df33499ccee027813248';\n\nexport function getTrending() {\n  return axios.get(`${API}3/trending/all/day?api_key=${KEY}`);\n}\n\nexport function getMovieDetails(movie_id) {\n  return axios.get(`${API}3/movie/${movie_id}?api_key=${KEY}`);\n}\n\nexport function getMovieCredits(movie_id) {\n  return axios.get(`${API}3/movie/${movie_id}/credits?api_key=${KEY}`);\n}\n\nexport function getMovieReviews(movie_id) {\n  return axios.get(`${API}3/movie/${movie_id}/reviews?api_key=${KEY}`);\n}\n\nexport function getMovie(query) {\n  return axios.get(`${API}3/search/movie?query=${query}&api_key=${KEY}`);\n}\n"],"names":["List","styled","ListFilms","films","location","useLocation","map","title","id","name","to","pathname","state","from","Title","text","memo","Home","useState","setFilms","loading","setLoading","useEffect","getTrending","then","response","data","results","catch","error","Notiflix","message","finally","API","KEY","axios","getMovieDetails","movie_id","getMovieCredits","getMovieReviews","getMovie","query"],"sourceRoot":""}